{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","components/ChatInput.js","components/Message.js","components/Chat.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContents","color","fadeIn","className","AppBody","path","exact","store","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3cfc27d2.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAesBgp8Pi5rikSr74vQ-btgACLZtXl1nA\",\n    authDomain: \"slack-clone-6b4b8.firebaseapp.com\",\n    projectId: \"slack-clone-6b4b8\",\n    storageBucket: \"slack-clone-6b4b8.appspot.com\",\n    messagingSenderId: \"133636994120\",\n    appId: \"1:133636994120:web:8fa39e1a6ee0ac3787547d\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth(); \nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider, db };","import React from 'react'\nimport styled from \"styled-components\";\nimport { Avatar } from \"@material-ui/core\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from '../firebase';\n\nfunction Header() {\n    const [user] = useAuthState(auth);\n\n    return (\n        <HeaderContainer>\n            <HeaderLeft>\n                <HeaderAvatar \n                    onClick={() => auth.signOut()}\n                    alt={user?.displayName}\n                    src={user?.photoURL}\n                /> \n                <AccessTimeIcon />\n            </HeaderLeft>\n\n            <HeaderSearch>\n                <SearchIcon />\n                <input placeholder='Search'/>\n            </HeaderSearch>\n\n            <HeaderRight>\n                <HelpOutlineIcon />\n            </HeaderRight>\n\n        </HeaderContainer>\n    );\n}\n\nexport default Header;\n\nconst HeaderSearch = styled.div`\n    flex: 0.4; \n    opacity: 1;\n    border-radius: 6px;\n    background-color: #421f44;\n    text-align: center;\n    display: flex; \n    padding: 0 50px;\n    color: gray; \n    border: 1px gray solid;\n\n    > input {\n        background-color: transparent;\n        border: none; \n        text-align: center;\n        min-width: 30vw;\n        outline: 0;\n        color: white;\n    }\n`;\n\nconst HeaderContainer = styled.div`\n    display: flex; \n    position: fixed; \n    width: 100%;\n    align-items: center; \n    justify-content: space-between; \n    padding: 10px 0;\n    background-color: var(--slack-color);\n    color: white;\n`;\n\nconst HeaderLeft = styled.div`\n    flex: 0.3;\n    display: flex; \n    align-items: center;\n    margin-left: 20px;\n\n    > .MuiSvgIcon-root {\n        margin-left: auto;\n        margin-right: 30px;\n    }\n`;\n\nconst HeaderRight = styled.div`\n    flex: 0.3; \n    display: flex; \n    align-items: flex-end;\n\n    > .MuiSvgIcon-root {\n        margin-left: auto;\n        margin-right: 20px;\n    }\n`;\n\nconst HeaderAvatar = styled(Avatar)`\n    cursor: pointer; \n\n    :hover {\n        opacity: 0.8; \n    }\n`;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    roomId: null,\n  },\n  reducers: {\n    enterRoom: (state, action) => {\n      state.roomId = action.payload.roomId;\n    },\n  },\n});\n\nexport const { enterRoom } = appSlice.actions;\n\nexport const selectRoomId = state => state.app.roomId;\n\nexport default appSlice.reducer;\n\n\n//   // The `extraReducers` field lets the slice handle actions defined elsewhere,\n//   // including actions generated by createAsyncThunk or in other slices.\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(incrementAsync.pending, (state) => {\n//         state.status = 'loading';\n//       })\n//       .addCase(incrementAsync.fulfilled, (state, action) => {\n//         state.status = 'idle';\n//         state.value += action.payload;\n//       });\n//   },\n// });\n\n\n// // The function below is called a selector and allows us to select a value from\n// // the state. Selectors can also be defined inline where they're used instead of\n// // in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n// export const selectCount = (state) => state.counter.value;\n\n// // We can also write thunks by hand, which may contain both sync and async logic.\n// // Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\n\n","import React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { enterRoom } from \"../features/appSlice\";\nimport { db } from '../firebase';\n\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\n    const dispatch = useDispatch();\n\n\n    const addChannel = () => {\n        const channelName = prompt('Please enter the channel name');\n\n        if (channelName) {\n            db.collection('rooms').add({\n                name: channelName,\n            });\n        }\n    };\n\n    const selectChannel = () => {\n        if (id) {\n            dispatch(enterRoom({\n                roomId: id\n            }))\n        }\n    };\n\n\n    return (\n        <SidebarOptionContainer\n            onClick={addChannelOption ? addChannel : selectChannel}\n        >\n            {Icon && <Icon fontSize='small' style={{ padding: 10 }} />}\n            {Icon ? (\n                <h3>{title}</h3>\n            ) : (\n                <SidebarOptionChannel>\n                    <span>#</span> {title}\n                </SidebarOptionChannel>\n            )}\n        </SidebarOptionContainer>\n    );\n}\n\nexport default SidebarOption;\n\nconst SidebarOptionContainer = styled.div`\n    display: flex; \n    font-size: 12px;\n    align-items: center;\n    padding-left: 2px;\n    cursor: pointer;\n\n    :hover {\n        opacity: 0.9;\n        background-color: #340e36;\n    }\n\n    > h3 {\n        font-weight: 500; \n    }\n\n    > h3 > span {\n        padding: 15px; \n    }\n`;\n\nconst SidebarOptionChannel = styled.h3`\n    padding: 10px 0;\n    font-weight: 300;\n`;\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport BookmarkBorder from '@material-ui/icons/BookmarkBorder';\nimport AddIcon from \"@material-ui/icons/Add\"\n\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport { auth, db } from \"../firebase\";\n\nimport SidebarOption from './SidebarOption';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\n\n\nfunction Sidebar() {\n    const [channels] = useCollection(db.collection('rooms'));\n    const [user] = useAuthState(auth);\n\n    return (\n        <SidebarContainer>\n            <SidebarHeader>\n                <SidebarInfo>\n                    <h2>MY HQ</h2>\n                    <h3>\n                        <FiberManualRecordIcon />\n                        Alice Green\n                    </h3>\n                </SidebarInfo>\n                <CreateIcon />\n            </SidebarHeader>\n\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & reactions\" />\n            <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\" />\n            <SidebarOption Icon={AppsIcon} title=\"Apps\" />\n            <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show less\" />\n            <hr />\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\n            <hr />\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\n\n            {channels?.docs.map(doc => (\n                <SidebarOption key={doc.id} id={doc.id} title={doc.data().name} />\n\n            ))}\n\n\n\n        </SidebarContainer>\n    );\n}\n\nexport default Sidebar;\n\nconst SidebarContainer = styled.div`\n    color: white;\n    background-color: var(--slack-color);\n    flex: 0.3;\n    border-top: 1px solid #49274b;\n    max-width: 260px; \n    margin-top: 60px;\n\n    > hr {\n        margin-top: 10px; \n        margin-bottom: 10px; \n        border: 1px solid #49274b;\n\n    }\n`;\n\n\nconst SidebarHeader = styled.div`\n    display: flex;\n    border-bottom: 1px solid #49274b;\n    padding: 13px; \n\n    > .MuiSvgIcon-root {\n        padding: 8px;\n        color: #49274b;\n        font-size: 18px; \n        background-color: white;\n        border-radius: 999px;\n    }\n`;\n\nconst SidebarInfo = styled.div`\n    flex: 1; \n\n    > h2 {\n        font-size: 15px;\n        font-weight: 900; \n        margin-bottom: 5px;\n    }\n\n    > h3 {\n        display: flex; \n        font-size: 13px; \n        font-weight: 400; \n        align-items: center;\n    }\n\n    > h3 > .MuiSvgIcon-root {\n        font-size: 14px; \n        margin-top: 1px;\n        margin-right: 2px; \n        color: green;\n    }\n`;","import React, { useRef, useState } from 'react';\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport { auth, db } from '../firebase';\nimport firebase from 'firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\n\n\nfunction ChatInput({ channelName, channelId, chatRef }) {\n    const [input, setInput] = useState('');\n    const [user] = useAuthState(auth);\n\n    const sendMessage = (e) => {\n        e.preventDefault();     // Prevents page from refreshing\n\n        if (!channelId) {\n            return false; \n        }\n\n        db.collection('rooms').doc(channelId).collection('messages').add({\n            message: input,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            user: user.displayName,\n            userImage: user.photoURL,\n        });\n\n        chatRef.current.scrollIntoView({\n            behavior: \"smooth\",\n        });\n\n        setInput(\"\");\n    };\n\n    return (\n        <ChatInputContainer>\n            <form>\n                <input \n                value={input} \n                onChange={(e) => setInput(e.target.value)}\n                placeholder={`Message #${channelName}`}\n                />\n                <Button hidden type='submit' onClick={sendMessage}>\n                    SEND\n                </Button>\n            </form>\n        </ChatInputContainer>\n    )\n}\n\nexport default ChatInput\n\nconst ChatInputContainer = styled.div`\n    border-radius: 20px;\n\n    > form {\n        position: relative;\n        display: flex;\n        justify-content: center;\n    }\n\n    > form > input {\n        position: fixed; \n        bottom: 30px; \n        width: 60%; \n        border: 1px solid gray; \n        border-radius: 3px; \n        padding: 20px; \n        outline: none;\n    }\n\n    > form > button {\n        display: none !important;\n    }\n`;\n","import React from 'react';\nimport styled from \"styled-components\";\n\nfunction Message({message, timestamp, user, userImage}) {\n    return (\n        <MessageContainer>\n            <img src={userImage} alt=\"\"/>\n            <MessageInfo>\n                <h4>\n                    {user} <span>{new Date(timestamp?.toDate()).toUTCString()}</span>\n                </h4>\n                <p>{message}</p>\n            </MessageInfo>\n        </MessageContainer>\n    )\n}\n\nexport default Message;\n\nconst MessageContainer = styled.div`\n    display: flex; \n    align-items: center; \n    padding: 20px; \n\n    > img {\n        height: 50px; \n        border-radius: 8px;\n    }\n`;\n\nconst MessageInfo = styled.div`\n    padding-left: 10px; \n\n    > h4 > span {\n        color: gray; \n        font-weight: 300; \n        margin-left: 4px; \n        font-size: 10px;\n    }\n`;\n","import React, { useRef, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport { useSelector } from \"react-redux\"; \nimport { selectRoomId } from \"../features/appSlice\";\nimport ChatInput from './ChatInput';\nimport Message from './Message';\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { db } from '../firebase';\n\nfunction Chat() {\n    const chatRef = useRef(null)\n    const roomId = useSelector(selectRoomId);\n    const [roomDetails] = useDocument(\n        roomId && db.collection('rooms').doc(roomId)\n    );\n\n    const [roomMessages, loading] = useCollection(\n        roomId && \n            db.collection('rooms')\n            .doc(roomId)\n            .collection('messages')\n            .orderBy('timestamp', 'asc')\n    )\n\n    useEffect(() => {\n        chatRef?.current?.scrollIntoView({\n            behavior: \"smooth\",\n        });\n    }, [roomId, loading]);\n\n\n    return (\n        <ChatContainer>\n            {roomDetails && roomMessages && (\n                <>\n                <Header>\n                    <HeaderLeft>\n                        <h4><strong>#{roomDetails?.data().name}</strong></h4>\n                        <StarBorderOutlinedIcon />\n                    </HeaderLeft>\n\n                    <HeaderRight>\n                        <p>\n                            <InfoOutlinedIcon /> Details\n                        </p>\n                    </HeaderRight>\n                </Header>\n\n                <ChatMessages>\n                    {roomMessages?.docs.map(doc => {\n                        const { message, timestamp, user, userImage } = doc.data();\n\n                        return (\n                            <Message \n                                key={doc.id}\n                                message={message}\n                                timestamp={timestamp}\n                                user={user}\n                                userImage={userImage}\n                            />\n                        )\n                    })}\n                    <ChatBottom ref={chatRef} /> \n                </ChatMessages>\n\n                <ChatInput \n                    chatRef={chatRef}\n                    channelName={roomDetails?.data().name}\n                    channelId={roomId}\n                /> \n            </>\n        )}\n        </ChatContainer>\n    );\n}\n\nexport default Chat;\n\nconst ChatBottom = styled.div`\n    padding-bottom: 200px;\n`;\n\nconst Header = styled.div`\n    display: flex; \n    justify-content: space-between;\n    padding: 20px; \n    border-bottom: 1px solid lightgray;\n`;\n\nconst ChatMessages = styled.div``;\n\nconst HeaderLeft = styled.div`\n    display: flex;\n    align-items: center;\n\n    > h4 {\n        display: flex; \n        text-transform: lowercase;\n        margin-right: 10px;\n    }\n\n    > h4 > .MuiSvgIcon-root {\n        margin-left: 10px; \n        font-size: 18px;\n    }\n`;\n\nconst HeaderRight = styled.div`\n    > p {\n        display: flex; \n        align-items: center;\n        font-size: 14px; ;\n    }\n\n    > p > .MuiSvgIcon-root {\n        margin-right: 5px !important; \n        font-size: 16px;\n    }\n`; \n\nconst ChatContainer = styled.div`\n    flex: 0.7;\n    flex-grow: 1; \n    overflow-y: scroll;\n    margin-top: 60px;\n`;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider } from '../firebase';\n\nfunction Login() {\n\n    const signIn = (e) => {\n        e.preventDefault();\n        auth.signInWithPopup(provider).catch((error) =>\n        alert(error.message));\n    }\n\n\n    return (\n        <LoginContainer>\n            <LoginInnerContainer>\n                <img src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg/\" alt=\"\" />\n                <h1>Sign in</h1>\n                <p>slack.com</p>\n\n            <Button \n                onClick={signIn}>\n                Sign in with Google\n            </Button>\n            </LoginInnerContainer>\n        </LoginContainer>\n    )\n}\n\nexport default Login\n\nconst LoginContainer = styled.div`\n    background-color: #f8f8f8;\n    height: 100vh;\n    display: grid; \n    place-items: center;\n`;\n\nconst LoginInnerContainer = styled.div`\n    padding: 100px;\n    text-align: center; \n    background-color: white;\n    border-radius: 10px; \n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n\n    > img {\n        object-fit: contain; \n        height: 100px; \n        margin-bottom: 40px; \n    }\n\n    > button { \n        margin-top: 50px; \n        text-transform: inherit !important; \n        background-color: #0a8d48 !important; \n        color: white;\n    }\n`;\n\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Chat from './components/Chat';\nimport styled from \"styled-components\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from \"./firebase\";\nimport Login from './components/Login';\nimport Spinner from \"react-spinkit\";\n\nfunction App() {\n  const [user, loading] = useAuthState(auth);\n\n  if (loading) {\n    return (\n      <AppLoading>\n        <AppLoadingContents>\n        <img \n          src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg/\" \n          alt=\"\"\n        />\n\n        <Spinner \n          name=\"ball-spin-fade-loader\"\n          color=\"purple\" fadeIn=\"none\"\n        />\n\n        </AppLoadingContents>\n      </AppLoading>\n    )\n  }\n\n  return (\n    <div className=\"app\">\n\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n            <Header />\n            <AppBody>\n              <Sidebar />\n              <Switch>\n                <Route path=\"/\" exact>\n                  <Chat />\n                </Route>\n              </Switch>\n            </AppBody>\n          \n          </>\n        )}\n        \n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst AppLoading = styled.div`\n  display: grid; \n  place-items: center; \n  height: 100vh;\n  width: 100%; \n`;\n\nconst AppLoadingContents = styled.div`\n  text-align: center; \n  padding-bottom: 100px; \n  display: flex; \n  flex-direction: column; \n  justify-content: center;\n  align-items: center;\n\n  > img {\n    height: 100px;\n    padding: 20px;\n    margin-bottom: 40px;\n  }\n`;\n\nconst AppBody = styled.div`\n  display: flex; \n  height: 100vh;\n`;","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from '../features/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}